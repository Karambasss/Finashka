package com.company;

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner Scan = new Scanner(System.in);
        // Создали массив Интерфейсов и инициализировали каждый i элемент массива
        // Для объекта типа интерфейс вызывается конструктор который создает объект класса гитара барабан и труба
        // То есть будет ссылка на тип интерфейса а сам объект будет создан как объект класса Гитара барабан и труба с ссылкой на тип интерфейса
        // Создается объект типа интерфейс который имеет конструктор который создает объект класса Гитара Барабан и Труба.
        Instrument[] instruments = new Instrument[3]; // Создается массив из объектов с заданной размерностью (то есть массив объектов типа Интерфейс состоящих из 3 элементов)
        System.out.println("Введите кол-во струн на гитаре! ");
        instruments[0] = new Guitar(5); // Мы создаем объект типа Интерфейс ссылающийся на объект класса Гитара, так как у гитары есть метожды реализующие Интерфейс и поэтому у класса объекта и класса интерфейса есть связь: мы можем вызывать только методы из объекта класса, реализующие интерфейс
        System.out.println("Введите размер барабана! ");
        instruments[1] = new Baraban(42); // связь между типом интерфейса и объекта: у нас в объекте есть методы реализующие данный интерфейс, так что поэтому мы можем сделать тип Интерфейса который ссылается на объект реализующий методы нашего типа(интерфейса) логика в том, что мы можем обращаться только к методам обънета которые реализуют интерфейс
        System.out.println("Введите диаметр трубы! ");
        instruments[2] = new Truba(20);

        // Циклично вызываем метод из объектов классов реализующий интерфейс

        for (int i = 0; i < instruments.length; i++){
            instruments[i].play();
        }
        System.out.println("---------------------------------------------------------------------------");

        Music_School music_school = new Music_School("Музыкальная школа города Москвы", 166);

        for (int i = 0; i < instruments.length; i++){
            music_school.add(instruments[i]);
        }
        System.out.println("----------------------------------------------------------------------------------");

        music_school.itog();

        System.out.println("----------------------------------------------------------------------------------");

        music_school.delInstrument(instruments[0]);

        System.out.println("----------------------------------------------------------------------------------");

        music_school.itog();

        System.out.println("---------------");

        System.out.println("МУЗЫКАЛЬНЫЙ МАГАЗИН");

        System.out.println("--------------------------------------------------------------------------------------------");

        Tovar[] tovars = new Tovar[3]; // Создали массив объектов Интерфейс c заданной размерностью

        // инициализируем каждый i элемент массива объектов Интерфейс

        tovars[0] = new Guitar(5); // Создаем объект класса Гитара с типом Tovar: У этого объекта есть методы которые реализуют данный Интерфейс, поэтому мы и можем связать их таким образом
        tovars[0].INFO();

        tovars[1] = new Baraban(5);
        tovars[1].INFO();

        tovars[2] = new Truba(24);
        tovars[2].INFO();
        // Все мы инициализировали данный массив из объектов; В каждом i элементе теперь лежат объекты разных классов, которые реализуют методы нашего интерфейса ( сугубо говоря, в каждом классе который реализует интерфейс есть методы которые как раз реализуют интерфейс (методы из интерфейса))

        for (int i = 0; i < tovars.length; i++){
            System.out.println("Вы собираетесь купить товар, введите габарит товара!"  +  " введите его цену!");

            tovars[i].buy();

            System.out.println("Вам понравился товар?");

            System.out.println("Введите 1 если товар исправный");

            System.out.println("Введите 0 если товар бракованный");

            tovars[i].test(Scan.nextInt());
        }
        System.out.println("-----------------------------------------------------------------------------------------------");

        Music_Shop musicShop = new Music_Shop("Интернет-магазин Бетховен", 67 );

        for (int i = 0; i < tovars.length; i++ ){
            musicShop.add(tovars[i]);
        }
        System.out.println("--------------------------------------------------------------------------------------------------");

        musicShop.INFO_ALL();

        System.out.println("----------------------------------------------------------------------------------------------------");

        System.out.println("Удаление");

        musicShop.DEL_OBJ(tovars[2]);

        System.out.println("----------------------");

        musicShop.INFO_ALL();
    }

}
