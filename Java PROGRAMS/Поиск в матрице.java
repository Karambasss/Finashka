/*
Напишите программу, которая определяет, сколько раз встречается в матрице элемент, равный K .

Входные данные
В первой строке записаны через пробел размеры матрицы: количество строк N и количество столбцов M ( 1 ≤ N , M ≤ 100 ). В следующих N строках записаны строки матрицы, в каждой – по M натуральных чисел, разделённых пробелами. В следующей строке записано целое число K .

Выходные данные
Программа должна вывести количество элементов матрицы, равных K .

Примеры
входные данные
4 5
1 2 3 4 5
6 12 8 9 10
11 12 12 14 15
16 17 18 12 20
12
выходные данные
4
*/

import java.util.Scanner;

public class Main{

  public static class Matrica{
    // создаем поля класса 

    int[][] matrix; // создали поле (матрица) с типом двумерного массива (сокр. создали двумерный массив matrix)

    int rows; // создаем поле для строк

    int columns; // создаем поле для столбцов

    public Matrica(int n, int m){
      // Конструктор для того, чтобы объявить размерность матрицы (то есть, задать матрице ее размер)

      this.rows = n;

      this.columns = m;

      this.matrix = new int[n][m]; // пишем, что матрицв из КЛАССА МАТРИЦА имеет размер ( new = объявление количества памяти на создание матрицы с указынными размерами) мы выделили  память для создание матрицы из класса Matrica 
    }

    public void set_matrix(){
      // метод для ввода чисел в матрицу
      Scanner Scan = new Scanner(System.in);

      for (int i = 0; i < this.rows; i++){
        for (int j = 0; j < this.columns; j++){
          this.matrix[i][j] = Scan.nextInt();
        }
      }
      System.out.println("Мы создали матрицу с указанными числами, которые вы вводили!");
    }
    public int get_cnt(int k){
      // создали метод для определения количества повторяющихся в матрице элементов с тем, который мы передали в аргумент метода get_cnt

      int cnt = 0;

      for (int i = 0; i < this.rows; i++){
        for (int j = 0; j < this.columns; j++){
          if (this.matrix[i][j] == k){
            cnt++;
          }
        }
      }
      return cnt;
    }

    public void output(){
      // создали метод для того, чтобы можно было вывести все элементы матрицы на экран
      for (int i = 0; i < this.rows; i++){
        for (int j = 0; j < this.columns; j++){
          System.out.print(this.matrix[i][j] + " "); // печать всех элементов из столбцов j пока i = 0, или i = 1, на одной строке с пробелом каждый раз
        }
        System.out.println();// как только все j столбцы отрабатывают свой проход по указанной строке, то мы делаем пустой перевод на новую строку ( после этого действия начинается новый цикл: строка i меняется на 1 и начинается новый проход по всем элементам столбца j по i строке)
      }
    }

  }

  public static void main(String[] args){

    // тут выполняются основной код программы (мы сливаем все свои методы сюда и возвращаем требуемый ответ)

    Scanner Scan = new Scanner(System.in); // создаем сканнер

    int n = Scan.nextInt(); // создаем количество строк для матрицы

    int m = Scan.nextInt(); // создаем количество столбцов для матрицы

    Matrica my_matrix = new Matrica(n,m); // тут мы получаем в переменной my_matrix, которая ссылается на класс Matrica в вызов конструктора Matrica(n,m) указанные значения для определения количества строк и определения количества столбцов в матрице, после всех действий у нас в my_matrix будет лежать готовая матрица с указанной размерностью) 
    // Теперь в переменной my_matrix лежит готовая матрица с той размерностью и выделением памяти, которую мы задали в строках выше (int n = Scanner.nextInt() и int m = Scanner.nextInt())
    
    my_matrix.set_matrix(); // ввели числа в матрицу

    int k = Scan.nextInt(); // вводим k ( для определения числа повторящихся с ней чисел в матрице)

    int otvet = my_matrix.get_cnt(k); // получаем количество повторяющихся с ней чисел в матрице

    System.out.println(otvet);

    my_matrix.output(); // ну и вывод матрицы на экран

  }
}